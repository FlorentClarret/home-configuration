#!/bin/bash
# 
# The reasons for these conventions:
# 
#     automatic generating of the changelog
#     simple navigation through git history (eg. ignoring style changes)
# 
# Format of the commit message:
# 
# 	<type>(<scope>): <subject>
# 
# 	<body>
# 	
# 	<footer>
# 
# Message subject (first line)
# 
# 	First line cannot be longer than 70 characters, second line is always blank and other lines should be wrapped at 80 characters.
# 
# 	Allowed <type> values:
# 
#     	feat (new feature)
#     	fix (bug fix)
#     	docs (changes to documentation)
#     	style (formatting, missing semi colons, etc; no code change)
#     	refactor (refactoring production code)
#     	test (adding missing tests, refactoring tests; no production code change)
#     	chore (updating grunt tasks etc; no production code change)

COMMIT_MESSAGE="$(cat $1)";
REGEXP_PATTERN="^(feat|fix|docs|style|refactor|test|chore)(\(.*\)){0,1}: .+$";

if [[ ! "$COMMIT_MESSAGE" =~ $REGEXP_PATTERN ]]; then
	echo "Your message commit does not respect the following pattern : $REGEXP_PATTERN";
	exit 1;
fi